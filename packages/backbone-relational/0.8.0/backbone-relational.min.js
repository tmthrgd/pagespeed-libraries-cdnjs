/**
 * Backbone-relational.js 0.8.0
 * (c) 2011-2013 Paul Uithol and contributors (https://github.com/PaulUithol/Backbone-relational/graphs/contributors)
 *
 * Backbone-relational may be freely distributed under the MIT license; see the accompanying LICENSE.txt.
 * For details and documentation: https://github.com/PaulUithol/Backbone-relational.
 * Depends on Backbone (and thus on Underscore as well): https://github.com/documentcloud/backbone.
 */
(function(undefined){"use strict";var _,Backbone,exports;if(typeof window==="undefined"){_=require("underscore");Backbone=require("backbone");exports=module.exports=Backbone}else{_=window._;Backbone=window.Backbone;exports=window}Backbone.Relational={showWarnings:true};Backbone.Semaphore={_permitsAvailable:null,_permitsUsed:0,acquire:function(){if(this._permitsAvailable&&this._permitsUsed>=this._permitsAvailable){throw new Error("Max permits acquired")}else{this._permitsUsed++}},release:function(){if(this._permitsUsed===0){throw new Error("All permits released")}else{this._permitsUsed--}},isLocked:function(){return this._permitsUsed>0},setAvailablePermits:function(amount){if(this._permitsUsed>amount){throw new Error("Available permits cannot be less than used permits")}this._permitsAvailable=amount}};Backbone.BlockingQueue=function(){this._queue=[]};_.extend(Backbone.BlockingQueue.prototype,Backbone.Semaphore,{_queue:null,add:function(func){if(this.isBlocked()){this._queue.push(func)}else{func()}},process:function(){while(this._queue&&this._queue.length){this._queue.shift()()}},block:function(){this.acquire()},unblock:function(){this.release();if(!this.isBlocked()){this.process()}},isBlocked:function(){return this.isLocked()}});Backbone.Relational.eventQueue=new Backbone.BlockingQueue;Backbone.Store=function(){this._collections=[];this._reverseRelations=[];this._orphanRelations=[];this._subModels=[];this._modelScopes=[exports]};_.extend(Backbone.Store.prototype,Backbone.Events,{initializeRelation:function(model,relation,options){var type=!_.isString(relation.type)?relation.type:Backbone[relation.type]||this.getObjectByName(relation.type);if(type&&type.prototype instanceof Backbone.Relation){new type(model,relation,options)}else{Backbone.Relational.showWarnings&&typeof console!=="undefined"&&console.warn("Relation=%o; missing or invalid relation type!",relation)}},addModelScope:function(scope){this._modelScopes.push(scope)},addSubModels:function(subModelTypes,superModelType){this._subModels.push({superModelType:superModelType,subModels:subModelTypes})},setupSuperModel:function(modelType){_.find(this._subModels,function(subModelDef){return _.find(subModelDef.subModels||[],function(subModelTypeName,typeValue){var subModelType=this.getObjectByName(subModelTypeName);if(modelType===subModelType){subModelDef.superModelType._subModels[typeValue]=modelType;modelType._superModel=subModelDef.superModelType;modelType._subModelTypeValue=typeValue;modelType._subModelTypeAttribute=subModelDef.superModelType.prototype.subModelTypeAttribute;return true}},this)},this)},addReverseRelation:function(relation){var exists=_.any(this._reverseRelations,function(rel){return _.all(relation||[],function(val,key){return val===rel[key]})});if(!exists&&relation.model&&relation.type){this._reverseRelations.push(relation);this._addRelation(relation.model,relation);this.retroFitRelation(relation)}},addOrphanRelation:function(relation){var exists=_.any(this._orphanRelations,function(rel){return _.all(relation||[],function(val,key){return val===rel[key]})});if(!exists&&relation.model&&relation.type){this._orphanRelations.push(relation)}},processOrphanRelations:function(){_.each(this._orphanRelations.slice(0),function(rel){var relatedModel=Backbone.Relational.store.getObjectByName(rel.relatedModel);if(relatedModel){this.initializeRelation(null,rel);this._orphanRelations=_.without(this._orphanRelations,rel)}},this)},_addRelation:function(type,relation){if(!type.prototype.relations){type.prototype.relations=[]}type.prototype.relations.push(relation);_.each(type._subModels||[],function(subModel){this._addRelation(subModel,relation)},this)},retroFitRelation:function(relation){var coll=this.getCollection(relation.model,false);coll&&coll.each(function(model){if(!(model instanceof relation.model)){return}new relation.type(model,relation)},this)},getCollection:function(type,create){if(type instanceof Backbone.RelationalModel){type=type.constructor}var rootModel=type;while(rootModel._superModel){rootModel=rootModel._superModel}var coll=_.findWhere(this._collections,{model:rootModel});if(!coll&&create!==false){coll=this._createCollection(rootModel)}return coll},getObjectByName:function(name){var parts=name.split("."),type=null;_.find(this._modelScopes,function(scope){type=_.reduce(parts||[],function(memo,val){return memo?memo[val]:undefined},scope);if(type&&type!==scope){return true}},this);return type},_createCollection:function(type){var coll;if(type instanceof Backbone.RelationalModel){type=type.constructor}if(type.prototype instanceof Backbone.RelationalModel){coll=new Backbone.Collection;coll.model=type;this._collections.push(coll)}return coll},resolveIdForItem:function(type,item){var id=_.isString(item)||_.isNumber(item)?item:null;if(id===null){if(item instanceof Backbone.RelationalModel){id=item.id}else if(_.isObject(item)){id=item[type.prototype.idAttribute]}}if(!id&&id!==0){id=null}return id},find:function(type,item){var id=this.resolveIdForItem(type,item);var coll=this.getCollection(type);if(coll){var obj=coll.get(id);if(obj instanceof type){return obj}}return null},register:function(model){var coll=this.getCollection(model);if(coll){if(coll.get(model)){if(Backbone.Relational.showWarnings&&typeof console!=="undefined"){console.warn("Duplicate id! Old RelationalModel=%o, new RelationalModel=%o",coll.get(model),model)}throw new Error("Cannot instantiate more than one Backbone.RelationalModel with the same id per type!")}var modelColl=model.collection;coll.add(model);this.listenTo(model,"destroy",this.unregister,this);model.collection=modelColl}},update:function(model){var coll=this.getCollection(model);coll._onModelEvent("change:"+model.idAttribute,model,coll)},unregister:function(model){this.stopListening(model,"destroy",this.unregister);var coll=this.getCollection(model);coll&&coll.remove(model)},reset:function(){this.stopListening();this._collections=[];this._subModels=[];this._modelScopes=[exports]}});Backbone.Relational.store=new Backbone.Store;Backbone.Relation=function(instance,options,opts){this.instance=instance;options=_.isObject(options)?options:{};this.reverseRelation=_.defaults(options.reverseRelation||{},this.options.reverseRelation);this.options=_.defaults(options,this.options,Backbone.Relation.prototype.options);this.reverseRelation.type=!_.isString(this.reverseRelation.type)?this.reverseRelation.type:Backbone[this.reverseRelation.type]||Backbone.Relational.store.getObjectByName(this.reverseRelation.type);this.key=this.options.key;this.keySource=this.options.keySource||this.key;this.keyDestination=this.options.keyDestination||this.keySource||this.key;this.model=this.options.model||this.instance.constructor;this.relatedModel=this.options.relatedModel;if(_.isString(this.relatedModel)){this.relatedModel=Backbone.Relational.store.getObjectByName(this.relatedModel)}if(!this.checkPreconditions()){return}if(!this.options.isAutoRelation&&this.reverseRelation.type&&this.reverseRelation.key){Backbone.Relational.store.addReverseRelation(_.defaults({isAutoRelation:true,model:this.relatedModel,relatedModel:this.model,reverseRelation:this.options},this.reverseRelation))}if(instance){var contentKey=this.keySource;if(contentKey!==this.key&&typeof this.instance.get(this.key)==="object"){contentKey=this.key}this.setKeyContents(this.instance.get(contentKey));this.relatedCollection=Backbone.Relational.store.getCollection(this.relatedModel);if(this.keySource!==this.key){this.instance.unset(this.keySource,{silent:true})}this.instance._relations[this.key]=this;this.initialize(opts);if(this.options.autoFetch){this.instance.fetchRelated(this.key,_.isObject(this.options.autoFetch)?this.options.autoFetch:{})}this.listenTo(this.instance,"destroy",this.destroy).listenTo(this.relatedCollection,"relational:add",this.tryAddRelated).listenTo(this.relatedCollection,"relational:remove",this.removeRelated)}};Backbone.Relation.extend=Backbone.Model.extend;_.extend(Backbone.Relation.prototype,Backbone.Events,Backbone.Semaphore,{options:{createModels:true,includeInJSON:true,isAutoRelation:false,autoFetch:false,parse:false},instance:null,key:null,keyContents:null,relatedModel:null,relatedCollection:null,reverseRelation:null,related:null,checkPreconditions:function(){var i=this.instance,k=this.key,m=this.model,rm=this.relatedModel,warn=Backbone.Relational.showWarnings&&typeof console!=="undefined";if(!m||!k||!rm){warn&&console.warn("Relation=%o: missing model, key or relatedModel (%o, %o, %o).",this,m,k,rm);return false}if(!(m.prototype instanceof Backbone.RelationalModel)){warn&&console.warn("Relation=%o: model does not inherit from Backbone.RelationalModel (%o).",this,i);return false}if(!(rm.prototype instanceof Backbone.RelationalModel)){warn&&console.warn("Relation=%o: relatedModel does not inherit from Backbone.RelationalModel (%o).",this,rm);return false}if(this instanceof Backbone.HasMany&&this.reverseRelation.type===Backbone.HasMany){warn&&console.warn("Relation=%o: relation is a HasMany, and the reverseRelation is HasMany as well.",this);return false}if(i&&_.keys(i._relations).length){var existing=_.find(i._relations,function(rel){return rel.key===k},this);if(existing){warn&&console.warn("Cannot create relation=%o on %o for model=%o: already taken by relation=%o.",this,k,i,existing);return false}}return true},setRelated:function(related){this.related=related;this.instance.acquire();this.instance.attributes[this.key]=related;this.instance.release()},_isReverseRelation:function(relation){return relation.instance instanceof this.relatedModel&&this.reverseRelation.key===relation.key&&this.key===relation.reverseRelation.key},getReverseRelations:function(model){var reverseRelations=[];var models=!_.isUndefined(model)?[model]:this.related&&(this.related.models||[this.related]);_.each(models||[],function(related){_.each(related.getRelations()||[],function(relation){if(this._isReverseRelation(relation)){reverseRelations.push(relation)}},this)},this);return reverseRelations},destroy:function(){this.stopListening();if(this instanceof Backbone.HasOne){this.setRelated(null)}else if(this instanceof Backbone.HasMany){this.setRelated(this._prepareCollection())}_.each(this.getReverseRelations(),function(relation){relation.removeRelated(this.instance)},this)}});Backbone.HasOne=Backbone.Relation.extend({options:{reverseRelation:{type:"HasMany"}},initialize:function(opts){this.listenTo(this.instance,"relational:change:"+this.key,this.onChange);var related=this.findRelated(opts);this.setRelated(related);_.each(this.getReverseRelations(),function(relation){relation.addRelated(this.instance,opts)},this)},findRelated:function(options){var related=null;options=_.defaults({parse:this.options.parse},options);if(this.keyContents instanceof this.relatedModel){related=this.keyContents}else if(this.keyContents||this.keyContents===0){var opts=_.defaults({create:this.options.createModels},options);related=this.relatedModel.findOrCreate(this.keyContents,opts)}return related},setKeyContents:function(keyContents){this.keyContents=keyContents;this.keyId=Backbone.Relational.store.resolveIdForItem(this.relatedModel,this.keyContents)},onChange:function(model,attr,options){if(this.isLocked()){return}this.acquire();options=options?_.clone(options):{};var changed=_.isUndefined(options.__related),oldRelated=changed?this.related:options.__related;if(changed){this.setKeyContents(attr);var related=this.findRelated(options);this.setRelated(related)}if(oldRelated&&this.related!==oldRelated){_.each(this.getReverseRelations(oldRelated),function(relation){relation.removeRelated(this.instance,null,options)},this)}_.each(this.getReverseRelations(),function(relation){relation.addRelated(this.instance,options)},this);if(!options.silent&&this.related!==oldRelated){var dit=this;this.changed=true;Backbone.Relational.eventQueue.add(function(){dit.instance.trigger("change:"+dit.key,dit.instance,dit.related,options,true);dit.changed=false})}this.release()},tryAddRelated:function(model,coll,options){if((this.keyId||this.keyId===0)&&model.id===this.keyId){this.addRelated(model,options);this.keyId=null}},addRelated:function(model,options){var dit=this;model.queue(function(){if(model!==dit.related){var oldRelated=dit.related||null;dit.setRelated(model);dit.onChange(dit.instance,model,_.defaults({__related:oldRelated},options))}})},removeRelated:function(model,coll,options){if(!this.related){return}if(model===this.related){var oldRelated=this.related||null;this.setRelated(null);this.onChange(this.instance,model,_.defaults({__related:oldRelated},options))}}});Backbone.HasMany=Backbone.Relation.extend({collectionType:null,options:{reverseRelation:{type:"HasOne"},collectionType:Backbone.Collection,collectionKey:true,collectionOptions:{}},initialize:function(opts){this.listenTo(this.instance,"relational:change:"+this.key,this.onChange);this.collectionType=this.options.collectionType;if(_.isString(this.collectionType)){this.collectionType=Backbone.Relational.store.getObjectByName(this.collectionType)}if(!this.collectionType.prototype instanceof Backbone.Collection){throw new Error("`collectionType` must inherit from Backbone.Collection")}var related=this.findRelated(opts);this.setRelated(related)},_prepareCollection:function(collection){if(this.related){this.stopListening(this.related)}if(!collection||!(collection instanceof Backbone.Collection)){var options=_.isFunction(this.options.collectionOptions)?this.options.collectionOptions(this.instance):this.options.collectionOptions;collection=new this.collectionType(null,options)}collection.model=this.relatedModel;if(this.options.collectionKey){var key=this.options.collectionKey===true?this.options.reverseRelation.key:this.options.collectionKey;if(collection[key]&&collection[key]!==this.instance){if(Backbone.Relational.showWarnings&&typeof console!=="undefined"){console.warn("Relation=%o; collectionKey=%s already exists on collection=%o",this,key,this.options.collectionKey)}}else if(key){collection[key]=this.instance}}this.listenTo(collection,"relational:add",this.handleAddition).listenTo(collection,"relational:remove",this.handleRemoval).listenTo(collection,"relational:reset",this.handleReset);return collection},findRelated:function(options){var related=null;options=_.defaults({parse:this.options.parse},options);if(this.keyContents instanceof Backbone.Collection){this._prepareCollection(this.keyContents);related=this.keyContents}else{var toAdd=[];_.each(this.keyContents,function(attributes){if(attributes instanceof this.relatedModel){var model=attributes}else{model=this.relatedModel.findOrCreate(attributes,_.extend({merge:true},options,{create:this.options.createModels}))}model&&toAdd.push(model)},this);if(this.related instanceof Backbone.Collection){related=this.related}else{related=this._prepareCollection()}related.update(toAdd,_.defaults({merge:false,parse:false},options))}return related},setKeyContents:function(keyContents){this.keyContents=keyContents instanceof Backbone.Collection?keyContents:null;this.keyIds=[];if(!this.keyContents&&(keyContents||keyContents===0)){this.keyContents=_.isArray(keyContents)?keyContents:[keyContents];_.each(this.keyContents,function(item){var itemId=Backbone.Relational.store.resolveIdForItem(this.relatedModel,item);if(itemId||itemId===0){this.keyIds.push(itemId)}},this)}},onChange:function(model,attr,options){options=options?_.clone(options):{};this.setKeyContents(attr);this.changed=false;var related=this.findRelated(options);this.setRelated(related);if(!options.silent){var dit=this;Backbone.Relational.eventQueue.add(function(){if(dit.changed){dit.instance.trigger("change:"+dit.key,dit.instance,dit.related,options,true);dit.changed=false}})}},handleAddition:function(model,coll,options){options=options?_.clone(options):{};this.changed=true;_.each(this.getReverseRelations(model),function(relation){relation.addRelated(this.instance,options)},this);var dit=this;!options.silent&&Backbone.Relational.eventQueue.add(function(){dit.instance.trigger("add:"+dit.key,model,dit.related,options)})},handleRemoval:function(model,coll,options){options=options?_.clone(options):{};this.changed=true;_.each(this.getReverseRelations(model),function(relation){relation.removeRelated(this.instance,null,options)},this);var dit=this;!options.silent&&Backbone.Relational.eventQueue.add(function(){dit.instance.trigger("remove:"+dit.key,model,dit.related,options)})},handleReset:function(coll,options){var dit=this;options=options?_.clone(options):{};!options.silent&&Backbone.Relational.eventQueue.add(function(){dit.instance.trigger("reset:"+dit.key,dit.related,options)})},tryAddRelated:function(model,coll,options){var item=_.contains(this.keyIds,model.id);if(item){this.addRelated(model,options);this.keyIds=_.without(this.keyIds,model.id)}},addRelated:function(model,options){var dit=this;model.queue(function(){if(dit.related&&!dit.related.get(model)){dit.related.add(model,options)}})},removeRelated:function(model,coll,options){if(this.related.get(model)){this.related.remove(model,options)}}});Backbone.RelationalModel=Backbone.Model.extend({relations:null,_relations:null,_isInitialized:false,_deferProcessing:false,_queue:null,subModelTypeAttribute:"type",subModelTypes:null,constructor:function(attributes,options){if(options&&options.collection){var dit=this,collection=this.collection=options.collection;delete options.collection;this._deferProcessing=true;var processQueue=function(model){if(model===dit){dit._deferProcessing=false;dit.processQueue();collection.off("relational:add",processQueue)}};collection.on("relational:add",processQueue);_.defer(function(){processQueue(dit)})}Backbone.Relational.store.processOrphanRelations();this._queue=new Backbone.BlockingQueue;this._queue.block();Backbone.Relational.eventQueue.block();try{Backbone.Model.apply(this,arguments)}finally{Backbone.Relational.eventQueue.unblock()}},trigger:function(eventName){if(eventName.length>5&&eventName.indexOf("change")===0){var dit=this,args=arguments;Backbone.Relational.eventQueue.add(function(){if(!dit._isInitialized){return}var changed=true;if(eventName==="change"){changed=dit.hasChanged()}else{var attr=eventName.slice(7),rel=dit.getRelation(attr);if(rel){changed=args[4]===true;if(changed){dit.changed[attr]=args[2]}else if(!rel.changed){delete dit.changed[attr]}}}changed&&Backbone.Model.prototype.trigger.apply(dit,args)})}else{Backbone.Model.prototype.trigger.apply(this,arguments)}return this},initializeRelations:function(options){this.acquire();this._relations={};_.each(this.relations||[],function(rel){Backbone.Relational.store.initializeRelation(this,rel,options)},this);this._isInitialized=true;this.release();this.processQueue()},updateRelations:function(options){if(this._isInitialized&&!this.isLocked()){_.each(this._relations,function(rel){var val=this.attributes[rel.keySource]||this.attributes[rel.key];if(rel.related!==val){this.trigger("relational:change:"+rel.key,this,val,options||{})}},this)}},queue:function(func){this._queue.add(func)},processQueue:function(){if(this._isInitialized&&!this._deferProcessing&&this._queue.isBlocked()){this._queue.unblock()}},getRelation:function(key){return this._relations[key]},getRelations:function(){return _.values(this._relations)},fetchRelated:function(key,options,refresh){options=_.extend({update:true,remove:false},options);var setUrl,requests=[],rel=this.getRelation(key),keys=rel&&(rel.keyIds||[rel.keyId]),toFetch=keys&&_.select(keys||[],function(id){return(id||id===0)&&(refresh||!Backbone.Relational.store.find(rel.relatedModel,id))},this);if(toFetch&&toFetch.length){var created=[],models=_.map(toFetch,function(id){var model=Backbone.Relational.store.find(rel.relatedModel,id);if(!model){var attrs={};attrs[rel.relatedModel.prototype.idAttribute]=id;model=rel.relatedModel.findOrCreate(attrs,options);created.push(model)}return model},this);if(rel.related instanceof Backbone.Collection&&_.isFunction(rel.related.url)){setUrl=rel.related.url(models)}if(setUrl&&setUrl!==rel.related.url()){var opts=_.defaults({error:function(){var args=arguments;_.each(created,function(model){model.trigger("destroy",model,model.collection,options);options.error&&options.error.apply(model,args)})},url:setUrl},options);requests=[rel.related.fetch(opts)]}else{requests=_.map(models,function(model){var opts=_.defaults({error:function(){if(_.contains(created,model)){model.trigger("destroy",model,model.collection,options);options.error&&options.error.apply(model,arguments)}}},options);return model.fetch(opts)},this)}}return requests},get:function(attr){var originalResult=Backbone.Model.prototype.get.call(this,attr);if(!this.dotNotation||attr.indexOf(".")===-1){return originalResult}var splits=attr.split(".");var result=_.reduce(splits,function(model,split){if(!(model instanceof Backbone.Model)){throw new Error("Attribute must be an instanceof Backbone.Model. Is: "+model+", currentSplit: "+split)}return Backbone.Model.prototype.get.call(model,split)},this);if(originalResult!==undefined&&result!==undefined){throw new Error("Ambiguous result for '"+attr+"'. direct result: "+originalResult+", dotNotation: "+result)}return originalResult||result},set:function(key,value,options){Backbone.Relational.eventQueue.block();var attributes;if(_.isObject(key)||key==null){attributes=key;options=value}else{attributes={};attributes[key]=value}var result=Backbone.Model.prototype.set.apply(this,arguments);try{if(!this._isInitialized&&!this.isLocked()){this.constructor.initializeModelHierarchy();Backbone.Relational.store.register(this);this.initializeRelations(options)}else if(attributes&&this.idAttribute in attributes){Backbone.Relational.store.update(this)}if(attributes){this.updateRelations(options)}}finally{Backbone.Relational.eventQueue.unblock()}return result},unset:function(attribute,options){Backbone.Relational.eventQueue.block();var result=Backbone.Model.prototype.unset.apply(this,arguments);this.updateRelations(options);Backbone.Relational.eventQueue.unblock();return result},clear:function(options){Backbone.Relational.eventQueue.block();var result=Backbone.Model.prototype.clear.apply(this,arguments);this.updateRelations(options);Backbone.Relational.eventQueue.unblock();return result},clone:function(){var attributes=_.clone(this.attributes);if(!_.isUndefined(attributes[this.idAttribute])){attributes[this.idAttribute]=null}_.each(this.getRelations(),function(rel){delete attributes[rel.key]});return new this.constructor(attributes)},toJSON:function(options){if(this.isLocked()){return this.id}this.acquire();var json=Backbone.Model.prototype.toJSON.call(this,options);if(this.constructor._superModel&&!(this.constructor._subModelTypeAttribute in json)){json[this.constructor._subModelTypeAttribute]=this.constructor._subModelTypeValue}_.each(this._relations,function(rel){var value=json[rel.key];if(rel.options.includeInJSON===true){if(value&&_.isFunction(value.toJSON)){json[rel.keyDestination]=value.toJSON(options)}else{json[rel.keyDestination]=null}}else if(_.isString(rel.options.includeInJSON)){if(value instanceof Backbone.Collection){json[rel.keyDestination]=value.pluck(rel.options.includeInJSON)}else if(value instanceof Backbone.Model){json[rel.keyDestination]=value.get(rel.options.includeInJSON)}else{json[rel.keyDestination]=null}}else if(_.isArray(rel.options.includeInJSON)){if(value instanceof Backbone.Collection){var valueSub=[];value.each(function(model){var curJson={};_.each(rel.options.includeInJSON,function(key){curJson[key]=model.get(key)});valueSub.push(curJson)});json[rel.keyDestination]=valueSub}else if(value instanceof Backbone.Model){var valueSub={};_.each(rel.options.includeInJSON,function(key){valueSub[key]=value.get(key)});json[rel.keyDestination]=valueSub}else{json[rel.keyDestination]=null}}else{delete json[rel.key]}if(rel.keyDestination!==rel.key){delete json[rel.key]}});this.release();return json}},{setup:function(superModel){this.prototype.relations=(this.prototype.relations||[]).slice(0);this._subModels={};this._superModel=null;if(this.prototype.hasOwnProperty("subModelTypes")){Backbone.Relational.store.addSubModels(this.prototype.subModelTypes,this)}else{this.prototype.subModelTypes=null}_.each(this.prototype.relations||[],function(rel){if(!rel.model){rel.model=this}if(rel.reverseRelation&&rel.model===this){var preInitialize=true;if(_.isString(rel.relatedModel)){var relatedModel=Backbone.Relational.store.getObjectByName(rel.relatedModel);preInitialize=relatedModel&&relatedModel.prototype instanceof Backbone.RelationalModel}if(preInitialize){Backbone.Relational.store.initializeRelation(null,rel)}else if(_.isString(rel.relatedModel)){Backbone.Relational.store.addOrphanRelation(rel)}}},this);return this},build:function(attributes,options){var model=this;this.initializeModelHierarchy();if(this._subModels&&this.prototype.subModelTypeAttribute in attributes){var subModelTypeAttribute=attributes[this.prototype.subModelTypeAttribute];var subModelType=this._subModels[subModelTypeAttribute];if(subModelType){model=subModelType}}return new model(attributes,options)},initializeModelHierarchy:function(){if(_.isUndefined(this._superModel)||_.isNull(this._superModel)){Backbone.Relational.store.setupSuperModel(this);if(this._superModel){if(this._superModel.prototype.relations){var supermodelRelationsExist=_.any(this.prototype.relations||[],function(rel){return rel.model&&rel.model!==this},this);if(!supermodelRelationsExist){this.prototype.relations=this._superModel.prototype.relations.concat(this.prototype.relations)}}}else{this._superModel=false}}if(this.prototype.subModelTypes&&_.keys(this.prototype.subModelTypes).length!==_.keys(this._subModels).length){_.each(this.prototype.subModelTypes||[],function(subModelTypeName){var subModelType=Backbone.Relational.store.getObjectByName(subModelTypeName);subModelType&&subModelType.initializeModelHierarchy()})}},findOrCreate:function(attributes,options){options||(options={});var parsedAttributes=_.isObject(attributes)&&options.parse&&this.prototype.parse?this.prototype.parse(attributes):attributes;var model=Backbone.Relational.store.find(this,parsedAttributes);if(_.isObject(attributes)){if(model&&options.merge!==false){model.set(parsedAttributes,options)}else if(!model&&options.create!==false){model=this.build(attributes,options)}}return model}});_.extend(Backbone.RelationalModel.prototype,Backbone.Semaphore);Backbone.Collection.prototype.__prepareModel=Backbone.Collection.prototype._prepareModel;Backbone.Collection.prototype._prepareModel=function(attrs,options){var model;if(attrs instanceof Backbone.Model){if(!attrs.collection){attrs.collection=this}model=attrs}else{options||(options={});options.collection=this;if(typeof this.model.findOrCreate!=="undefined"){model=this.model.findOrCreate(attrs,options)}else{model=new this.model(attrs,options)}if(model&&model.isNew()&&!model._validate(attrs,options)){this.trigger("invalid",this,attrs,options);model=false}}return model};var add=Backbone.Collection.prototype.__add=Backbone.Collection.prototype.add;Backbone.Collection.prototype.add=function(models,options){if(!(this.model.prototype instanceof Backbone.RelationalModel)){return add.apply(this,arguments)}models=_.isArray(models)?models.slice():[models];options=_.extend({merge:false},options);var newModels=[],toAdd=[];_.each(models,function(model){if(!(model instanceof Backbone.Model)){model=Backbone.Collection.prototype._prepareModel.call(this,model,options)}if(model){toAdd.push(model);if(!(this.get(model)||this.get(model.cid))){newModels.push(model)}else if(model.id!=null){this._byId[model.id]=model}}},this);add.call(this,toAdd,options);_.each(newModels,function(model){if(this.get(model)||this.get(model.cid)){this.trigger("relational:add",model,this,options)}},this);return this};var remove=Backbone.Collection.prototype.__remove=Backbone.Collection.prototype.remove;Backbone.Collection.prototype.remove=function(models,options){if(!(this.model.prototype instanceof Backbone.RelationalModel)){return remove.apply(this,arguments)}models=_.isArray(models)?models.slice():[models];options||(options={});var toRemove=[];_.each(models,function(model){model=this.get(model)||this.get(model.cid);model&&toRemove.push(model)},this);if(toRemove.length){remove.call(this,toRemove,options);_.each(toRemove,function(model){this.trigger("relational:remove",model,this,options)},this)}return this};var reset=Backbone.Collection.prototype.__reset=Backbone.Collection.prototype.reset;Backbone.Collection.prototype.reset=function(models,options){reset.call(this,models,options);if(this.model.prototype instanceof Backbone.RelationalModel){this.trigger("relational:reset",this,options)}return this};var sort=Backbone.Collection.prototype.__sort=Backbone.Collection.prototype.sort;Backbone.Collection.prototype.sort=function(options){sort.call(this,options);if(this.model.prototype instanceof Backbone.RelationalModel){this.trigger("relational:reset",this,options)}return this};var trigger=Backbone.Collection.prototype.__trigger=Backbone.Collection.prototype.trigger;Backbone.Collection.prototype.trigger=function(eventName){if(!(this.model.prototype instanceof Backbone.RelationalModel)){return trigger.apply(this,arguments)}if(eventName==="add"||eventName==="remove"||eventName==="reset"){var dit=this,args=arguments;if(_.isObject(args[3])){args=_.toArray(args);args[3]=_.clone(args[3])}Backbone.Relational.eventQueue.add(function(){trigger.apply(dit,args)})}else{trigger.apply(this,arguments)}return this};Backbone.RelationalModel.extend=function(protoProps,classProps){var child=Backbone.Model.extend.apply(this,arguments);child.setup(this);return child}})();