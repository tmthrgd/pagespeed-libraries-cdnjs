angular.module("ui.date",[]).constant("uiDateConfig",{}).directive("uiDate",["uiDateConfig",function(e){"use strict";var t;return t={},angular.extend(t,e),{require:"?ngModel",link:function(t,n,r,a){var i=function(){return angular.extend({},e,t.$eval(r.uiDate))},u=function(){var e=!1,r=i();if(a){var u=r.onSelect||angular.noop;r.onSelect=function(r,i){t.$apply(function(){e=!0,a.$setViewValue(n.datepicker("getDate")),u(r,i),n.blur()})},r.beforeShow=function(){e=!0},r.onClose=function(){e=!1},n.off("blur.datepicker").on("blur.datepicker",function(){e||t.$apply(function(){n.datepicker("setDate",n.datepicker("getDate")),a.$setViewValue(n.datepicker("getDate"))})}),a.$render=function(){var e=a.$viewValue;if(angular.isDefined(e)&&null!==e&&!angular.isDate(e))throw new Error("ng-Model value must be a Date object - currently it is a "+typeof e+" - use ui-date-format to convert it from a string");n.datepicker("setDate",e)}}n.datepicker("destroy"),n.datepicker(r),a&&a.$render()};t.$watch(i,u,!0)}}}]).constant("uiDateFormatConfig","").directive("uiDateFormat",["uiDateFormatConfig",function(e){var t={require:"ngModel",link:function(t,n,r,a){var i=r.uiDateFormat||e;i?(a.$formatters.push(function(e){return angular.isString(e)?jQuery.datepicker.parseDate(i,e):null}),a.$parsers.push(function(e){return e?jQuery.datepicker.formatDate(i,e):null})):(a.$formatters.push(function(e){return angular.isString(e)?new Date(e):null}),a.$parsers.push(function(e){return e?e.toISOString():null}))}};return t}]);