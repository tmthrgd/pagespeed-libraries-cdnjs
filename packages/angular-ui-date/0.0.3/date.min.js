angular.module("ui.date",[]).constant("uiDateConfig",{}).directive("uiDate",["uiDateConfig","$timeout",function(e,t){"use strict";var r;return r={},angular.extend(r,e),{require:"?ngModel",link:function(r,n,a,u){var i=function(){return angular.extend({},e,r.$eval(a.uiDate))},o=function(){var e=i();if(u){var a=u.$setViewValue,o=!1;u.$setViewValue=function(){o||(o=!0,n.datepicker("setDate",n.datepicker("getDate")),a.call(u,n.datepicker("getDate")),t(function(){o=!1}))};var l=e.onSelect||angular.noop;e.onSelect=function(e,t){r.$apply(function(){u.$setViewValue(e),l(e,t),n.blur()})};var c=e.beforeShow||angular.noop;e.beforeShow=function(e,t){return!o&&c(e,t)},u.$render=function(){var e=u.$viewValue;if(angular.isDefined(e)&&null!==e&&!angular.isDate(e))throw new Error("ng-Model value must be a Date object - currently it is a "+typeof e+" - use ui-date-format to convert it from a string");n.datepicker("setDate",e)}}n.datepicker("destroy"),n.datepicker(e),u&&u.$render()};r.$watch(i,o,!0)}}}]).constant("uiDateFormatConfig","").directive("uiDateFormat",["uiDateFormatConfig",function(e){var t={require:"ngModel",link:function(t,r,n,a){var u=n.uiDateFormat||e;u?(a.$formatters.push(function(e){return angular.isString(e)?jQuery.datepicker.parseDate(u,e):null}),a.$parsers.push(function(e){return e?jQuery.datepicker.formatDate(u,e):null})):(a.$formatters.push(function(e){return angular.isString(e)?new Date(e):null}),a.$parsers.push(function(e){return e?e.toISOString():null}))}};return t}]);