angular.module("ngTranslate",["ng","ngCookies"]).run(["$translate","$COOKIE_KEY","$cookieStore",function(n,t,a){n.rememberLanguage()&&(a.get(t)?n.uses(a.get(t)):a.put(t,n.uses()))}]),angular.module("ngTranslate").directive("translate",["$filter","$interpolate",function(n,t){var a=n("translate");return{restrict:"A",scope:!0,link:function(n,r,e){e.$observe("translate",function(a){n.translationId=angular.equals(a,"")?t(r.text())(n.$parent):a}),e.$observe("values",function(t){n.interpolateParams=t}),n.$on("translationChangeSuccess",function(){r.html(a(n.translationId,n.interpolateParams))}),n.$watch("translationId + interpolateParams",function(t){t&&r.html(a(n.translationId,n.interpolateParams))})}}}]),angular.module("ngTranslate").filter("translate",["$parse","$translate",function(n,t){return function(a,r){return angular.isObject(r)||(r=n(r)()),t(a,r)}}]),angular.module("ngTranslate").constant("$COOKIE_KEY","NG_TRANSLATE_LANG_KEY"),angular.module("ngTranslate").provider("$translate",function(){var n,t={},a=!1;this.translations=function(n,a){if(!n&&!a)return t;if(n&&!a){if(angular.isString(n))return t[n];t=n}else t[n]=a},this.uses=function(a){if(!a)return n;if(!t[a])throw Error("$translateProvider couldn't find translationTable for langKey: '"+a+"'");n=a},this.rememberLanguage=function(n){return angular.isUndefined(n)?a:(a=n,void 0)},this.$get=["$interpolate","$log","$cookieStore","$rootScope","$COOKIE_KEY",function(r,e,o,s,i){return $translate=function(a,o){var s=n?t[n][a]:t[a];return s?r(s)(o):(e.warn("Translation for "+a+" doesn't exist"),a)},$translate.uses=function(t){return t?(n!==t&&(n=t,a&&o.put(i,n),s.$broadcast("translationChangeSuccess")),void 0):n},$translate.rememberLanguage=function(){return a},$translate}]});