// Backbone.Radio v0.4.0

!function(a,b){if("function"==typeof define&&define.amd)define(["backbone","underscore"],function(a,c){return b(a,c)});else if("undefined"!=typeof exports){var c=require("backbone"),d=require("underscore");module.exports=b(c,d)}else b(a.Backbone,a._)}(this,function(a,b){"use strict";function c(a){return h[a]||(h[a]=b.partial(f.log,a))}function d(a){return b.isFunction(a)?a:b.constant(a)}var e=a.Radio,f=a.Radio={};f.VERSION="0.4.0",f.noConflict=function(){return a.Radio=e,this};var g=Array.prototype.slice;b.extend(f,{_channels:{},DEBUG:!1,channel:function(a){if(!a)throw new Error("You must provide a name for the channel.");return f._getChannel(a)},_getChannel:function(a){var b=f._channels[a];return b||(b=new f.Channel(a),f._channels[a]=b),b}});var h={};b.extend(f,{log:function(a,b){var c=g.call(arguments,2);console.log("["+a+'] "'+b+'"',c)},tuneIn:function(a){var b=f.channel(a);return b._tunedIn=!0,b.on("all",c(a)),this},tuneOut:function(a){var b=f.channel(a);return b._tunedIn=!1,b.off("all",c(a)),delete h[a],this}}),f.Commands={command:function(a){var b=g.call(arguments,1),c=this._channelName;if(c&&this._tunedIn&&f.log.apply(this,[c,a].concat(b)),this._commands&&this._commands[a]){var d=this._commands[a];d.callback.apply(d.context,b)}else if(f.DEBUG){var e=c?" on the "+c+" channel":"";console.warn("An unhandled event was fired"+e+': "'+a+'"')}return this},react:function(a,b,c){return this._commands||(this._commands={}),this._commands[a]={callback:b,context:c||this},this},reactOnce:function(a,c,d){var e=this,f=b.once(function(){return e.stopReacting(a),c.apply(this,arguments)});return this.react(a,f,d)},stopReacting:function(a){var b=this._commands;if(a){if(b&&b[a])delete b[a];else if(f.DEBUG){var c=this._channelName,d=c?" on the "+c+" channel.":"";console.warn('Attempted to remove the unregistered command "'+a+'"'+d)}}else delete this._commands;return this}},f.Requests={request:function(a){var b=g.call(arguments,1),c=this._channelName;if(c&&this._tunedIn&&f.log.apply(this,[c,a].concat(b)),this._requests&&this._requests[a]){var d=this._requests[a];return d.callback.apply(d.context,b)}if(f.DEBUG){var e=c?" on the "+c+" channel":"";console.warn("An unhandled event was fired"+e+': "'+a+'"')}},reply:function(a,b,c){return this._requests||(this._requests={}),this._requests[a]={callback:d(b),context:c||this},this},replyOnce:function(a,c,e){var f=this,g=b.once(function(){return f.stopReplying(a),d(c).apply(this,arguments)});return this.reply(a,g,e)},stopReplying:function(a){var b=this._requests;if(a){if(b&&b[a])delete b[a];else if(f.DEBUG){var c=this._channelName,d=c?" on the "+c+" channel.":"";console.warn('Attempted to remove the unregistered request "'+a+'"'+d)}}else delete this._requests;return this}},f.Channel=function(c){this._channelName=c,b.extend(this,a.Events,f.Commands,f.Requests)},b.extend(f.Channel.prototype,{reset:function(){return this.off(),this.stopListening(),this.stopReacting(),this.stopReplying(),this},connectEvents:function(a,b){return this._connect("on",a,b)},connectCommands:function(a,b){return this._connect("react",a,b)},connectRequests:function(a,b){return this._connect("reply",a,b)},_connect:function(a,c,d){return c?(b.each(c,function(b,c){this[a](c,b,d||this)},this),this):void 0}});var i,j,k=[a.Events,f.Commands,f.Requests];return b.each(k,function(a){b.each(a,function(a,b){f[b]=function(a){return j=g.call(arguments,2),i=this.channel(a),i[b].apply(i,j)}})}),f});
//# sourceMappingURL=backbone.radio.min.map