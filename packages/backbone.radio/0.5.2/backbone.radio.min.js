// Backbone.Radio v0.5.2

!function(a,b){if("function"==typeof define&&define.amd)define(["backbone","underscore"],function(a,c){return b(a,c)});else if("undefined"!=typeof exports){var c=require("backbone"),d=require("underscore");module.exports=b(c,d)}else b(a.Backbone,a._)}(this,function(a,b){"use strict";function c(a){return h[a]||(h[a]=b.partial(g.log,a))}function d(a){return b.isFunction(a)?a:b.constant(a)}var e=Array.prototype.slice,f=a.Radio,g=a.Radio={};g.VERSION="0.5.2",g.noConflict=function(){return a.Radio=f,this},b.extend(g,{_channels:{},DEBUG:!1,_debugLog:function(a,b,c){if(this.DEBUG){var d=c?" on the "+c+" channel":"";console.warn(a+d+': "'+b+'"')}},channel:function(a){if(!a)throw new Error("You must provide a name for the channel.");return g._channels[a]||new g.Channel(a)}});var h={};b.extend(g,{log:function(a,b){var c=e.call(arguments,2);console.log("["+a+'] "'+b+'"',c)},tuneIn:function(a){var b=g.channel(a);return b._tunedIn=!0,b.on("all",c(a)),this},tuneOut:function(a){var b=g.channel(a);return b._tunedIn=!1,b.off("all",c(a)),delete h[a],this}}),g.Commands={command:function(a){var b=e.call(arguments,1),c=this._channelName;if(c&&this._tunedIn&&g.log.apply(this,[c,a].concat(b)),this._commands&&this._commands[a]){var d=this._commands[a];d.callback.apply(d.context,b)}else g._debugLog("An unhandled event was fired",a,c);return this},comply:function(a,b,c){return this._commands||(this._commands={}),this._commands[a]={callback:b,context:c||this},this},complyOnce:function(a,c,d){var e=this,f=b.once(function(){return e.stopComplying(a),c.apply(this,arguments)});return this.comply(a,f,d)},stopComplying:function(a){var b=this._commands;return a?b&&b[a]?delete b[a]:g._debugLog("Attempted to remove the unregistered command",a,this._channelName):delete this._commands,this}},g.Requests={request:function(a){var b=e.call(arguments,1),c=this._channelName;if(c&&this._tunedIn&&g.log.apply(this,[c,a].concat(b)),this._requests&&this._requests[a]){var d=this._requests[a];return d.callback.apply(d.context,b)}g._debugLog("An unhandled event was fired",a,c)},reply:function(a,b,c){return this._requests||(this._requests={}),this._requests[a]={callback:d(b),context:c||this},this},replyOnce:function(a,c,e){var f=this,g=b.once(function(){return f.stopReplying(a),d(c).apply(this,arguments)});return this.reply(a,g,e)},stopReplying:function(a){var b=this._requests;return a?b&&b[a]?delete b[a]:g._debugLog("Attempted to remove the unregistered request",a,this._channelName):delete this._requests,this}},g.Channel=function(a){this._channelName=a,g._channels[a]=this},b.extend(g.Channel.prototype,a.Events,g.Commands,g.Requests,{reset:function(){return this.off(),this.stopListening(),this.stopComplying(),this.stopReplying(),this},connectEvents:function(a,b){return this._connect("on",a,b)},connectCommands:function(a,b){return this._connect("comply",a,b)},connectRequests:function(a,b){return this._connect("reply",a,b)},_connect:function(a,c,d){return c?(b.each(c,function(b,c){this[a](c,b,d||this)},this),this):void 0}});var i,j,k=[a.Events,g.Commands,g.Requests];return b.each(k,function(a){b.each(a,function(a,b){g[b]=function(a){return j=e.call(arguments,1),i=this.channel(a),i[b].apply(i,j)}})}),g});
//# sourceMappingURL=backbone.radio.min.map