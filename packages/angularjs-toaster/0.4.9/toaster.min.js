!function(){"use strict";angular.module("toaster",["ngAnimate"]).service("toaster",["$rootScope",function(t){this.pop=function(e,o,s,i,n,a){if(angular.isObject(e)){var c=e;this.toast={type:c.type,title:c.title,body:c.body,timeout:c.timeout,bodyOutputType:c.bodyOutputType,clickHandler:c.clickHandler}}else this.toast={type:e,title:o,body:s,timeout:i,bodyOutputType:n,clickHandler:a};t.$emit("toaster-newToast")},this.clear=function(){t.$emit("toaster-clearToasts")}}]).constant("toasterConfig",{limit:0,"tap-to-dismiss":!0,"close-button":!1,"newest-on-top":!0,"time-out":5e3,"icon-classes":{error:"toast-error",info:"toast-info",wait:"toast-wait",success:"toast-success",warning:"toast-warning"},"body-output-type":"","body-template":"toasterBodyTmpl.html","icon-class":"toast-info","position-class":"toast-top-right","title-class":"toast-title","message-class":"toast-message"}).directive("toasterContainer",["$compile","$rootScope","$interval","$sce","toasterConfig","toaster",function(t,e,o,s,i,n){return{replace:!0,restrict:"EA",scope:!0,link:function(t,a,c){function r(e){switch(e.type=u["icon-classes"][e.type],e.type||(e.type=u["icon-class"]),p++,angular.extend(e,{id:p}),e.bodyOutputType=e.bodyOutputType||u["body-output-type"],e.bodyOutputType){case"trustedHtml":e.html=s.trustAsHtml(e.body);break;case"template":e.bodyTemplate=e.body||u["body-template"]}t.configureTimer(e),u["newest-on-top"]===!0?(t.toasters.unshift(e),u.limit>0&&t.toasters.length>u.limit&&t.toasters.pop()):(t.toasters.push(e),u.limit>0&&t.toasters.length>u.limit&&t.toasters.shift())}function l(e,s){e.timeout=o(function(){t.removeToast(e.id)},s)}var u,p=0;u=angular.extend({},i,t.$eval(c.toasterOptions)),t.config={position:u["position-class"],title:u["title-class"],message:u["message-class"],tap:u["tap-to-dismiss"],closeButton:u["close-button"],animation:u["animation-class"]},t.configureTimer=function(t){var e="number"==typeof t.timeout?t.timeout:u["time-out"];e>0&&l(t,e)},t.toasters=[],e.$on("toaster-newToast",function(){r(n.toast)}),e.$on("toaster-clearToasts",function(){t.toasters.splice(0,t.toasters.length)})},controller:["$scope","$element","$attrs",function(t){t.stopTimer=function(t){t.timeout&&(o.cancel(t.timeout),t.timeout=null)},t.restartTimer=function(e){e.timeout||t.configureTimer(e)},t.removeToast=function(e){var o=0;for(o;o<t.toasters.length&&t.toasters[o].id!==e;o++);t.toasters.splice(o,1)},t.click=function(e,o){if(t.config.tap===!0){var s=!0;e.clickHandler&&(angular.isFunction(e.clickHandler)?s=e.clickHandler(e,o):angular.isFunction(t.$parent.$eval(e.clickHandler))?s=t.$parent.$eval(e.clickHandler)(e,o):console.log("TOAST-NOTE: Your click handler is not inside a parent scope of toaster-container.")),s&&t.removeToast(e.id)}}}],template:'<div  id="toast-container" ng-class="[config.position, config.animation]"><div ng-repeat="toaster in toasters" class="toast" ng-class="toaster.type" ng-click="click(toaster)" ng-mouseover="stopTimer(toaster)"  ng-mouseout="restartTimer(toaster)"><button class="toast-close-button" ng-show="config.closeButton" ng-click="click(toaster, true)">&times;</button><div ng-class="config.title">{{toaster.title}}</div><div ng-class="config.message" ng-switch on="toaster.bodyOutputType"><div ng-switch-when="trustedHtml" ng-bind-html="toaster.html"></div><div ng-switch-when="template"><div ng-include="toaster.bodyTemplate"></div></div><div ng-switch-default >{{toaster.body}}</div></div></div></div>'}}])}(window,document);