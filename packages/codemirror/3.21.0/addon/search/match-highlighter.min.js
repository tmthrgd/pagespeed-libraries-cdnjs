// Highlighting text that matches the selection
//
// Defines an option highlightSelectionMatches, which, when enabled,
// will style strings that match the selection throughout the
// document.
//
// The option can be set to true to simply enable it, or to a
// {minChars, style, showToken} object to explicitly configure it.
// minChars is the minimum amount of characters that should be
// selected for the behavior to occur, and style is the token style to
// apply to the matches. This will be prefixed by "cm-" to create an
// actual CSS class name. showToken, when enabled, will cause the
// current token to be highlighted when nothing is selected.
(function(){function r(r){typeof r=="object"&&(this.minChars=r.minChars,this.style=r.style,this.showToken=r.showToken,this.delay=r.delay),this.style==null&&(this.style=t),this.minChars==null&&(this.minChars=e),this.delay==null&&(this.delay=n),this.overlay=this.timeout=null}function i(e){var t=e.state.matchHighlighter;clearTimeout(t.timeout),t.timeout=setTimeout(function(){s(e)},t.delay)}function s(e){e.operation(function(){var t=e.state.matchHighlighter;t.overlay&&(e.removeOverlay(t.overlay),t.overlay=null);if(!e.somethingSelected()&&t.showToken){var n=t.showToken===!0?/[\w$]/:t.showToken,r=e.getCursor(),i=e.getLine(r.line),s=r.ch,o=s;while(s&&n.test(i.charAt(s-1)))--s;while(o<i.length&&n.test(i.charAt(o)))++o;s<o&&e.addOverlay(t.overlay=u(i.slice(s,o),n,t.style));return}if(e.getCursor("head").line!=e.getCursor("anchor").line)return;var a=e.getSelection().replace(/^\s+|\s+$/g,"");a.length>=t.minChars&&e.addOverlay(t.overlay=u(a,!1,t.style))})}function o(e,t){return(!e.start||!t.test(e.string.charAt(e.start-1)))&&(e.pos==e.string.length||!t.test(e.string.charAt(e.pos)))}function u(e,t,n){return{token:function(r){if(r.match(e)&&(!t||o(r,t)))return n;r.next(),r.skipTo(e.charAt(0))||r.skipToEnd()}}}var e=2,t="matchhighlight",n=100;CodeMirror.defineOption("highlightSelectionMatches",!1,function(e,t,n){if(n&&n!=CodeMirror.Init){var o=e.state.matchHighlighter.overlay;o&&e.removeOverlay(o),clearTimeout(e.state.matchHighlighter.timeout),e.state.matchHighlighter=null,e.off("cursorActivity",i)}t&&(e.state.matchHighlighter=new r(t),s(e),e.on("cursorActivity",i))})})();