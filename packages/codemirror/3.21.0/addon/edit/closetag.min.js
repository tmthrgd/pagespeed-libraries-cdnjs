/**
 * Tag-closer extension for CodeMirror.
 *
 * This extension adds an "autoCloseTags" option that can be set to
 * either true to get the default behavior, or an object to further
 * configure its behavior.
 *
 * These are supported options:
 *
 * `whenClosing` (default true)
 *   Whether to autoclose when the '/' of a closing tag is typed.
 * `whenOpening` (default true)
 *   Whether to autoclose the tag when the final '>' of an opening
 *   tag is typed.
 * `dontCloseTags` (default is empty tags for HTML, none for XML)
 *   An array of tag names that should not be autoclosed.
 * `indentTags` (default is block tags for HTML, none for XML)
 *   An array of tag names that should, when opened, cause a
 *   blank line to be added inside the tag, and the blank line and
 *   closing line to be indented.
 *
 * See demos/closetag.html for a usage example.
 */(function(){function n(n){var r=n.getCursor(),s=n.getTokenAt(r),o=CodeMirror.innerMode(n.getMode(),s.state),u=o.state;if(o.mode.name!="xml"||!u.tagName||n.getOption("disableInput"))return CodeMirror.Pass;var a=n.getOption("autoCloseTags"),f=o.mode.configuration=="html",l=typeof a=="object"&&a.dontCloseTags||f&&e,c=typeof a=="object"&&a.indentTags||f&&t,h=u.tagName;s.end>r.ch&&(h=h.slice(0,h.length-s.end+r.ch));var p=h.toLowerCase();if(!h||s.type=="string"&&(s.end!=r.ch||!/[\"\']/.test(s.string.charAt(s.string.length-1))||s.string.length==1)||s.type=="tag"&&u.type=="closeTag"||s.string.indexOf("/")==s.string.length-1||l&&i(l,p)>-1||CodeMirror.scanForClosingTag&&CodeMirror.scanForClosingTag(n,r,h,Math.min(n.lastLine()+1,r.line+50)))return CodeMirror.Pass;var d=c&&i(c,p)>-1,v=d?CodeMirror.Pos(r.line+1,0):CodeMirror.Pos(r.line,r.ch+1);n.replaceSelection(">"+(d?"\n\n":"")+"</"+h+">",{head:v,anchor:v}),d&&(n.indentLine(r.line+1,null,!0),n.indentLine(r.line+2,null))}function r(e){var t=e.getCursor(),n=e.getTokenAt(t),r=CodeMirror.innerMode(e.getMode(),n.state),i=r.state;if(n.type=="string"||n.string.charAt(0)!="<"||n.start!=t.ch-1||r.mode.name!="xml"||e.getOption("disableInput"))return CodeMirror.Pass;var s=i.context&&i.context.tagName;s&&e.replaceSelection("/"+s+">","end")}function i(e,t){if(e.indexOf)return e.indexOf(t);for(var n=0,r=e.length;n<r;++n)if(e[n]==t)return n;return-1}CodeMirror.defineOption("autoCloseTags",!1,function(e,t,i){i!=CodeMirror.Init&&i&&e.removeKeyMap("autoCloseTags");if(!t)return;var s={name:"autoCloseTags"};if(typeof t!="object"||t.whenClosing)s["'/'"]=function(e){return r(e)};if(typeof t!="object"||t.whenOpening)s["'>'"]=function(e){return n(e)};e.addKeyMap(s)});var e=["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"],t=["applet","blockquote","body","button","div","dl","fieldset","form","frameset","h1","h2","h3","h4","h5","h6","head","html","iframe","layer","legend","object","ol","p","select","table","ul"]})();