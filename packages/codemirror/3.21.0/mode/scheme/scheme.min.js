/**
 * Author: Koh Zi Han, based on implementation by Koh Zi Chun
 */CodeMirror.defineMode("scheme",function(){function u(e){var t={},n=e.split(" ");for(var r=0;r<n.length;++r)t[n[r]]=!0;return t}function l(e,t,n){this.indent=e,this.type=t,this.prev=n}function c(e,t,n){e.indentStack=new l(t,n,e.indentStack)}function h(e){e.indentStack=e.indentStack.prev}function g(e){return e.match(p)}function y(e){return e.match(d)}function b(e,t){return t===!0&&e.backUp(1),e.match(m)}function w(e){return e.match(v)}var e="builtin",t="comment",n="string",r="atom",i="number",s="bracket",o=2,a=u("Î» case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?"),f=u("define let letrec let* lambda"),p=new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i),d=new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i),v=new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i),m=new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);return{startState:function(){return{indentStack:null,indentation:0,mode:!1,sExprComment:!1}},token:function(u,l){l.indentStack==null&&u.sol()&&(l.indentation=u.indentation());if(u.eatSpace())return null;var p=null;switch(l.mode){case"string":var d,v=!1;while((d=u.next())!=null){if(d=='"'&&!v){l.mode=!1;break}v=!v&&d=="\\"}p=n;break;case"comment":var d,m=!1;while((d=u.next())!=null){if(d=="#"&&m){l.mode=!1;break}m=d=="|"}p=t;break;case"s-expr-comment":l.mode=!1;if(u.peek()!="("&&u.peek()!="["){u.eatWhile(/[^/s]/),p=t;break}l.sExprComment=0;default:var E=u.next();if(E=='"')l.mode="string",p=n;else if(E=="'")p=r;else if(E=="#")if(u.eat("|"))l.mode="comment",p=t;else if(u.eat(/[tf]/i))p=r;else if(u.eat(";"))l.mode="s-expr-comment",p=t;else{var S=null,x=!1,T=!0;u.eat(/[ei]/i)?x=!0:u.backUp(1),u.match(/^#b/i)?S=g:u.match(/^#o/i)?S=y:u.match(/^#x/i)?S=w:u.match(/^#d/i)?S=b:u.match(/^[-+0-9.]/,!1)?(T=!1,S=b):x||u.eat("#"),S!=null&&(T&&!x&&u.match(/^#[ei]/i),S(u)&&(p=i))}else if(/^[-+0-9.]/.test(E)&&b(u,!0))p=i;else if(E==";")u.skipToEnd(),p=t;else if(E=="("||E=="["){var N="",C=u.column(),k;while((k=u.eat(/[^\s\(\[\;\)\]]/))!=null)N+=k;N.length>0&&f.propertyIsEnumerable(N)?c(l,C+o,E):(u.eatSpace(),u.eol()||u.peek()==";"?c(l,C+1,E):c(l,C+u.current().length,E)),u.backUp(u.current().length-1),typeof l.sExprComment=="number"&&l.sExprComment++,p=s}else E==")"||E=="]"?(p=s,l.indentStack!=null&&l.indentStack.type==(E==")"?"(":"[")&&(h(l),typeof l.sExprComment=="number"&&--l.sExprComment==0&&(p=t,l.sExprComment=!1))):(u.eatWhile(/[\w\$_\-!$%&*+\.\/:<=>?@\^~]/),a&&a.propertyIsEnumerable(u.current())?p=e:p="variable")}return typeof l.sExprComment=="number"?t:p},indent:function(e){return e.indentStack==null?e.indentation:e.indentStack.indent},lineComment:";;"}}),CodeMirror.defineMIME("text/x-scheme","scheme");