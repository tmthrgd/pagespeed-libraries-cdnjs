/*jshint unused:true, eqnull:true, curly:true, bitwise:true *//*jshint undef:true, latedef:true, trailing:true *//*global CodeMirror:true */// erlang mode.
// tokenizer -> token types -> CodeMirror styles
// tokenizer maintains a parse stack
// indenter uses the parse stack
// TODO indenter:
//   bit syntax
//   old guard/bif/conversion clashes (e.g. "float/1")
//   type/spec/opaque
CodeMirror.defineMIME("text/x-erlang","erlang"),CodeMirror.defineMode("erlang",function(e){"use strict";function m(e,m){if(m.in_string)return m.in_string=!b(e),T(m,e,"string");if(m.in_atom)return m.in_atom=!w(e),T(m,e,"atom");if(e.eatSpace())return T(m,e,"whitespace");if(!L(m)&&e.match(/-\s*[a-zß-öø-ÿ][\wØ-ÞÀ-Öß-öø-ÿ]*/))return x(e.current(),t)?T(m,e,"type"):T(m,e,"attribute");var E=e.next();if(E=="%")return e.skipToEnd(),T(m,e,"comment");if(E==":")return T(m,e,"colon");if(E=="?")return e.eatSpace(),e.eatWhile(d),T(m,e,"macro");if(E=="#")return e.eatSpace(),e.eatWhile(d),T(m,e,"record");if(E=="$")return e.next()=="\\"&&!e.match(v)?T(m,e,"error"):T(m,e,"number");if(E==".")return T(m,e,"dot");if(E=="'"){if(!(m.in_atom=!w(e))){if(e.match(/\s*\/\s*[0-9]/,!1))return e.match(/\s*\/\s*[0-9]/,!0),T(m,e,"fun");if(e.match(/\s*\(/,!1)||e.match(/\s*:/,!1))return T(m,e,"function")}return T(m,e,"atom")}if(E=='"')return m.in_string=!b(e),T(m,e,"string");if(/[A-Z_Ø-ÞÀ-Ö]/.test(E))return e.eatWhile(d),T(m,e,"variable");if(/[a-z_ß-öø-ÿ]/.test(E)){e.eatWhile(d);if(e.match(/\s*\/\s*[0-9]/,!1))return e.match(/\s*\/\s*[0-9]/,!0),T(m,e,"fun");var N=e.current();return x(N,n)?T(m,e,"keyword"):x(N,s)?T(m,e,"operator"):e.match(/\s*\(/,!1)?!x(N,p)||L(m).token==":"&&L(m,2).token!="erlang"?x(N,h)?T(m,e,"guard"):T(m,e,"function"):T(m,e,"builtin"):x(N,s)?T(m,e,"operator"):S(e)==":"?N=="erlang"?T(m,e,"builtin"):T(m,e,"function"):x(N,["true","false"])?T(m,e,"boolean"):x(N,["true","false"])?T(m,e,"boolean"):T(m,e,"atom")}var C=/[0-9]/,k=/[0-9a-zA-Z]/;return C.test(E)?(e.eatWhile(C),e.eat("#")?e.eatWhile(k)||e.backUp(1):e.eat(".")&&(e.eatWhile(C)?e.eat(/[eE]/)&&(e.eat(/[-+]/)?e.eatWhile(C)||e.backUp(2):e.eatWhile(C)||e.backUp(1)):e.backUp(1)),T(m,e,"number")):g(e,a,f)?T(m,e,"open_paren"):g(e,l,c)?T(m,e,"close_paren"):y(e,r,i)?T(m,e,"separator"):y(e,o,u)?T(m,e,"operator"):T(m,e,null)}function g(e,t,n){if(e.current().length==1&&t.test(e.current())){e.backUp(1);while(t.test(e.peek())){e.next();if(x(e.current(),n))return!0}e.backUp(e.current().length-1)}return!1}function y(e,t,n){if(e.current().length==1&&t.test(e.current())){while(t.test(e.peek()))e.next();while(0<e.current().length){if(x(e.current(),n))return!0;e.backUp(1)}e.next()}return!1}function b(e){return E(e,'"',"\\")}function w(e){return E(e,"'","\\")}function E(e,t,n){while(!e.eol()){var r=e.next();if(r==t)return!0;r==n&&e.next()}return!1}function S(e){var t=e.match(/([\n\s]+|%[^\n]*\n)*(.)/,!1);return t?t.pop():""}function x(e,t){return-1<t.indexOf(e)}function T(e,t,n){A(e,C(n,t));switch(n){case"atom":return"atom";case"attribute":return"attribute";case"boolean":return"special";case"builtin":return"builtin";case"close_paren":return null;case"colon":return null;case"comment":return"comment";case"dot":return null;case"error":return"error";case"fun":return"meta";case"function":return"tag";case"guard":return"property";case"keyword":return"keyword";case"macro":return"variable-2";case"number":return"number";case"open_paren":return null;case"operator":return"operator";case"record":return"bracket";case"separator":return null;case"string":return"string";case"type":return"def";case"variable":return"variable";default:return null}}function N(e,t,n,r){return{token:e,column:t,indent:n,type:r}}function C(e,t){return N(t.current(),t.column(),t.indentation(),e)}function k(e){return N(e,0,0,e)}function L(e,t){var n=e.tokenStack.length,r=t?t:1;return n<r?!1:e.tokenStack[n-r]}function A(e,t){t.type!="comment"&&t.type!="whitespace"&&(e.tokenStack=O(e.tokenStack,t),e.tokenStack=M(e.tokenStack))}function O(e,t){var n=e.length-1;return 0<n&&e[n].type==="record"&&t.type==="dot"?e.pop():0<n&&e[n].type==="group"?(e.pop(),e.push(t)):e.push(t),e}function M(e){var t=e.length-1;if(e[t].type==="dot")return[];if(e[t].type==="fun"&&e[t-1].token==="fun")return e.slice(0,t-1);switch(e[e.length-1].token){case"}":return _(e,{g:["{"]});case"]":return _(e,{i:["["]});case")":return _(e,{i:["("]});case">>":return _(e,{i:["<<"]});case"end":return _(e,{i:["begin","case","fun","if","receive","try"]});case",":return _(e,{e:["begin","try","when","->",",","(","[","{","<<"]});case"->":return _(e,{r:["when"],m:["try","if","case","receive"]});case";":return _(e,{E:["case","fun","if","receive","try","when"]});case"catch":return _(e,{e:["try"]});case"of":return _(e,{e:["case"]});case"after":return _(e,{e:["receive","try"]});default:return e}}function _(e,t){for(var n in t){var r=e.length-1,i=t[n];for(var s=r-1;-1<s;s--)if(x(e[s].token,i)){var o=e.slice(0,s);switch(n){case"m":return o.concat(e[s]).concat(e[r]);case"r":return o.concat(e[r]);case"i":return o;case"g":return o.concat(k("group"));case"E":return o.concat(e[s]);case"e":return o.concat(e[s])}}}return n=="E"?[]:e}function D(t,n){var r,i=e.indentUnit,s=P(n),o=L(t,1),u=L(t,2);return t.in_string||t.in_atom?CodeMirror.Pass:u?o.token=="when"?o.column+i:s==="when"&&u.type==="function"?u.indent+i:s==="("&&o.token==="fun"?o.column+3:s==="catch"&&(r=j(t,["try"]))?r.column:x(s,["end","after","of"])?(r=j(t,["begin","case","fun","if","receive","try"]),r?r.column:CodeMirror.Pass):x(s,c)?(r=j(t,f),r?r.column:CodeMirror.Pass):x(o.token,[",","|","||"])||x(s,[",","|","||"])?(r=H(t),r?r.column+r.token.length:i):o.token=="->"?x(u.token,["receive","case","if","try"])?u.column+i+i:u.column+i:x(o.token,f)?o.column+o.token.length:(r=B(t),I(r)?r.column+i:0):0}function P(e){var t=e.match(/,|[a-z]+|\}|\]|\)|>>|\|+|\(/);return I(t)&&t.index===0?t[0]:""}function H(e){var t=e.tokenStack.slice(0,-1),n=F(t,"type",["open_paren"]);return I(t[n])?t[n]:!1}function B(e){var t=e.tokenStack,n=F(t,"type",["open_paren","separator","keyword"]),r=F(t,"type",["operator"]);return I(n)&&I(r)&&n<r?t[n+1]:I(n)?t[n]:!1}function j(e,t){var n=e.tokenStack,r=F(n,"token",t);return I(n[r])?n[r]:!1}function F(e,t,n){for(var r=e.length-1;-1<r;r--)if(x(e[r][t],n))return r;return!1}function I(e){return e!==!1&&e!=null}var t=["-type","-spec","-export_type","-opaque"],n=["after","begin","catch","case","cond","end","fun","if","let","of","query","receive","try","when"],r=/[\->,;]/,i=["->",";",","],s=["and","andalso","band","bnot","bor","bsl","bsr","bxor","div","not","or","orelse","rem","xor"],o=/[\+\-\*\/<>=\|:!]/,u=["=","+","-","*","/",">",">=","<","=<","=:=","==","=/=","/=","||","<-","!"],a=/[<\(\[\{]/,f=["<<","(","[","{"],l=/[>\)\]\}]/,c=["}","]",")",">>"],h=["is_atom","is_binary","is_bitstring","is_boolean","is_float","is_function","is_integer","is_list","is_number","is_pid","is_port","is_record","is_reference","is_tuple","atom","binary","bitstring","boolean","function","integer","list","number","pid","port","record","reference","tuple"],p=["abs","adler32","adler32_combine","alive","apply","atom_to_binary","atom_to_list","binary_to_atom","binary_to_existing_atom","binary_to_list","binary_to_term","bit_size","bitstring_to_list","byte_size","check_process_code","contact_binary","crc32","crc32_combine","date","decode_packet","delete_module","disconnect_node","element","erase","exit","float","float_to_list","garbage_collect","get","get_keys","group_leader","halt","hd","integer_to_list","internal_bif","iolist_size","iolist_to_binary","is_alive","is_atom","is_binary","is_bitstring","is_boolean","is_float","is_function","is_integer","is_list","is_number","is_pid","is_port","is_process_alive","is_record","is_reference","is_tuple","length","link","list_to_atom","list_to_binary","list_to_bitstring","list_to_existing_atom","list_to_float","list_to_integer","list_to_pid","list_to_tuple","load_module","make_ref","module_loaded","monitor_node","node","node_link","node_unlink","nodes","notalive","now","open_port","pid_to_list","port_close","port_command","port_connect","port_control","pre_loaded","process_flag","process_info","processes","purge_module","put","register","registered","round","self","setelement","size","spawn","spawn_link","spawn_monitor","spawn_opt","split_binary","statistics","term_to_binary","time","throw","tl","trunc","tuple_size","tuple_to_list","unlink","unregister","whereis"],d=/[\w@Ø-ÞÀ-Öß-öø-ÿ]/,v=/[0-7]{1,3}|[bdefnrstv\\"']|\^[a-zA-Z]|x[0-9a-zA-Z]{2}|x{[0-9a-zA-Z]+}/;return{startState:function(){return{tokenStack:[],in_string:!1,in_atom:!1}},token:function(e,t){return m(e,t)},indent:function(e,t){return D(e,t)},lineComment:"%"}});