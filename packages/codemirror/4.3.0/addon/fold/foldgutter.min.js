(function(a){if(typeof exports=="object"&&typeof module=="object"){a(require("../../lib/codemirror"),require("./foldcode"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror","./foldcode"],a)}else{a(CodeMirror)}}})(function(d){d.defineOption("foldGutter",false,function(m,o,n){if(n&&n!=d.Init){m.clearGutter(m.state.foldGutter.options.gutter);m.state.foldGutter=null;m.off("gutterClick",k);m.off("change",g);m.off("viewportChange",l);m.off("fold",e);m.off("unfold",e);m.off("swapDoc",b)}if(o){m.state.foldGutter=new j(i(o));b(m);m.on("gutterClick",k);m.on("change",g);m.on("viewportChange",l);m.on("fold",e);m.on("unfold",e);m.on("swapDoc",b)}});var h=d.Pos;function j(m){this.options=m;this.from=this.to=0}function i(m){if(m===true){m={}}if(m.gutter==null){m.gutter="CodeMirror-foldgutter"}if(m.indicatorOpen==null){m.indicatorOpen="CodeMirror-foldgutter-open"}if(m.indicatorFolded==null){m.indicatorFolded="CodeMirror-foldgutter-folded"}return m}function c(m,n){var p=m.findMarksAt(h(n));for(var o=0;o<p.length;++o){if(p[o].__isFold&&p[o].find().from.line==n){return true}}}function f(m){if(typeof m=="string"){var n=document.createElement("div");n.className=m+" CodeMirror-guttermarker-subtle";return n}else{return m.cloneNode(true)}}function a(m,q,p){var n=m.state.foldGutter.options,o=q;m.eachLine(q,p,function(r){var v=null;if(c(m,o)){v=f(n.indicatorFolded)}else{var u=h(o,0),t=n.rangeFinder||d.fold.auto;var s=t&&t(m,u);if(s&&s.from.line+1<s.to.line){v=f(n.indicatorOpen)}}m.setGutterMarker(r,n.gutter,v);++o})}function b(m){var n=m.getViewport(),o=m.state.foldGutter;if(!o){return}m.operation(function(){a(m,n.from,n.to)});o.from=n.from;o.to=n.to}function k(m,n,p){var o=m.state.foldGutter.options;if(p!=o.gutter){return}m.foldCode(h(n,0),o.rangeFinder)}function g(m){var o=m.state.foldGutter,n=m.state.foldGutter.options;o.from=o.to=0;clearTimeout(o.changeUpdate);o.changeUpdate=setTimeout(function(){b(m)},n.foldOnChangeTimeSpan||600)}function l(m){var o=m.state.foldGutter,n=m.state.foldGutter.options;clearTimeout(o.changeUpdate);o.changeUpdate=setTimeout(function(){var p=m.getViewport();if(o.from==o.to||p.from-o.to>20||o.from-p.to>20){b(m)}else{m.operation(function(){if(p.from<o.from){a(m,p.from,o.from);o.from=p.from}if(p.to>o.to){a(m,o.to,p.to);o.to=p.to}})}},n.updateViewportTimeSpan||400)}function e(m,p){var o=m.state.foldGutter,n=p.line;if(n>=o.from&&n<o.to){a(m,n,n+1)}}});