// block; "begin", "case", "fun", "if", "receive", "try": closed by "end"
// block internal; "after", "catch", "of"
// guard; "when", closed by "->"
// "->" opens a clause, closed by ";" or "."
// "<<" opens a binary, closed by ">>"
// "," appears in arglists, lists, tuples and terminates lines of code
// "." resets indentation to 0
// obsolete; "cond", "let", "query"
CodeMirror.defineMIME("text/x-erlang","erlang"),CodeMirror.defineMode("erlang",function(e){function t(e,t,n){e.in_record=n=="record";switch(n){case"atom":return"atom";case"attribute":return"attribute";case"boolean":return"special";case"builtin":return"builtin";case"comment":return"comment";case"fun":return"meta";case"function":return"tag";case"guard":return"property";case"keyword":return"keyword";case"macro":return"variable-2";case"number":return"number";case"operator":return"operator";case"record":return"bracket";case"string":return"string";case"type":return"def";case"variable":return"variable";case"error":return"error";case"separator":return null;case"open_paren":return null;case"close_paren":return null;default:return null}}function g(e,g){if(g.in_string)return g.in_string=!E(e),t(g,e,"string");if(g.in_atom)return g.in_atom=!S(e),t(g,e,"atom");if(e.eatSpace())return t(g,e,"whitespace");if(A(g).token==""&&e.match(/-\s*[a-zß-öø-ÿ][\wØ-ÞÀ-Öß-öø-ÿ]*/))return T(e.current(),n)?t(g,e,"type"):t(g,e,"attribute");var x=e.next();if(x=="%")return e.skipToEnd(),t(g,e,"comment");if(x=="?")return e.eatWhile(v),t(g,e,"macro");if(x=="#")return e.eatWhile(v),t(g,e,"record");if(x=="$")return e.next()=="\\"&&!e.match(m)?t(g,e,"error"):t(g,e,"number");if(x=="'"){if(!(g.in_atom=!S(e))){if(e.match(/\s*\/\s*[0-9]/,!1))return e.match(/\s*\/\s*[0-9]/,!0),L(g),t(g,e,"fun");if(e.match(/\s*\(/,!1)||e.match(/\s*:/,!1))return t(g,e,"function")}return t(g,e,"atom")}if(x=='"')return g.in_string=!E(e),t(g,e,"string");if(/[A-Z_Ø-ÞÀ-Ö]/.test(x))return e.eatWhile(v),t(g,e,"variable");if(/[a-z_ß-öø-ÿ]/.test(x)){e.eatWhile(v);if(e.match(/\s*\/\s*[0-9]/,!1))return e.match(/\s*\/\s*[0-9]/,!0),L(g),t(g,e,"fun");var N=e.current();return T(N,r)?(O(g,e),t(g,e,"keyword")):e.match(/\s*\(/,!1)?T(N,d)&&(!y(e,":")||y(e,"erlang:"))?t(g,e,"builtin"):T(N,p)?t(g,e,"guard"):t(g,e,"function"):T(N,o)?t(g,e,"operator"):e.match(/\s*:/,!1)?N=="erlang"?t(g,e,"builtin"):t(g,e,"function"):T(N,["true","false"])?t(g,e,"boolean"):t(g,e,"atom")}var C=/[0-9]/,k=/[0-9a-zA-Z]/;return C.test(x)?(e.eatWhile(C),e.eat("#")?e.eatWhile(k):(e.eat(".")&&e.eatWhile(C),e.eat(/[eE]/)&&(e.eat(/[-+]/),e.eatWhile(C))),t(g,e,"number")):b(e,f,l)?(O(g,e),t(g,e,"open_paren")):b(e,c,h)?(O(g,e),t(g,e,"close_paren")):w(e,i,s)?(g.in_record||O(g,e),t(g,e,"separator")):w(e,u,a)?t(g,e,"operator"):t(g,e,null)}function y(e,t){var n=e.start,r=t.length;if(r<=n){var i=e.string.slice(n-r,n);return i==t}return!1}function b(e,t,n){if(e.current().length==1&&t.test(e.current())){e.backUp(1);while(t.test(e.peek())){e.next();if(T(e.current(),n))return!0}e.backUp(e.current().length-1)}return!1}function w(e,t,n){if(e.current().length==1&&t.test(e.current())){while(t.test(e.peek()))e.next();while(0<e.current().length){if(T(e.current(),n))return!0;e.backUp(1)}e.next()}return!1}function E(e){return x(e,'"',"\\")}function S(e){return x(e,"'","\\")}function x(e,t,n){while(!e.eol()){var r=e.next();if(r==t)return!0;r==n&&e.next()}return!1}function T(e,t){return-1<t.indexOf(e)}function N(t,n){var r=e.indentUnit,i=A(t).token,s=C(n,/[^a-z]/);return t.in_string||t.in_atom?CodeMirror.Pass:i==""?0:T(i,l)?A(t).column+i.length:i=="when"?A(t).column+i.length+1:i=="fun"&&s==""?A(t).column+i.length:i=="->"?T(s,["end","after","catch"])?A(t,2).column:A(t,2).token=="fun"?A(t,2).column+r:A(t,2).token==""?r:A(t).indent+r:T(s,["after","catch","of"])?A(t).indent:A(t).column+r}function C(e,t){var n=e.match(t);return n?e.slice(0,n.index):e}function k(e){this.token=e?e.current():"",this.column=e?e.column():0,this.indent=e?e.indentation():0}function L(e){return e.tokenStack.pop()}function A(e,t){var n=e.tokenStack.length,r=t?t:1;return n<r?new k:e.tokenStack[n-r]}function O(e,t){var n=t.current(),r=A(e).token;return n=="."?(e.tokenStack=[],!1):T(n,[",",":","of","cond","let","query"])?!1:M(r,n)?!1:D(r,n)?(L(e),!1):_(r,n)?(L(e),O(e,t)):T(n,["after","catch"])?!1:(e.tokenStack.push(new k(t)),!0)}function M(e,t){switch(e+" "+t){case"when ;":return!0;default:return!1}}function _(e,t){switch(e+" "+t){case"when ->":return!0;case"-> end":return!0;default:return!1}}function D(e,t){switch(e+" "+t){case"( )":return!0;case"[ ]":return!0;case"{ }":return!0;case"<< >>":return!0;case"begin end":return!0;case"case end":return!0;case"fun end":return!0;case"if end":return!0;case"receive end":return!0;case"try end":return!0;case"-> catch":return!0;case"-> after":return!0;case"-> ;":return!0;default:return!1}}var n=["-type","-spec","-export_type","-opaque"],r=["after","begin","catch","case","cond","end","fun","if","let","of","query","receive","try","when"],i=/[\->\.,:;]/,s=["->",";",":",".",","],o=["and","andalso","band","bnot","bor","bsl","bsr","bxor","div","not","or","orelse","rem","xor"],u=/[\+\-\*\/<>=\|:!]/,a=["+","-","*","/",">",">=","<","=<","=:=","==","=/=","/=","||","<-","!"],f=/[<\(\[\{]/,l=["<<","(","[","{"],c=/[>\)\]\}]/,h=["}","]",")",">>"],p=["is_atom","is_binary","is_bitstring","is_boolean","is_float","is_function","is_integer","is_list","is_number","is_pid","is_port","is_record","is_reference","is_tuple","atom","binary","bitstring","boolean","function","integer","list","number","pid","port","record","reference","tuple"],d=["abs","adler32","adler32_combine","alive","apply","atom_to_binary","atom_to_list","binary_to_atom","binary_to_existing_atom","binary_to_list","binary_to_term","bit_size","bitstring_to_list","byte_size","check_process_code","contact_binary","crc32","crc32_combine","date","decode_packet","delete_module","disconnect_node","element","erase","exit","float","float_to_list","garbage_collect","get","get_keys","group_leader","halt","hd","integer_to_list","internal_bif","iolist_size","iolist_to_binary","is_alive","is_atom","is_binary","is_bitstring","is_boolean","is_float","is_function","is_integer","is_list","is_number","is_pid","is_port","is_process_alive","is_record","is_reference","is_tuple","length","link","list_to_atom","list_to_binary","list_to_bitstring","list_to_existing_atom","list_to_float","list_to_integer","list_to_pid","list_to_tuple","load_module","make_ref","module_loaded","monitor_node","node","node_link","node_unlink","nodes","notalive","now","open_port","pid_to_list","port_close","port_command","port_connect","port_control","pre_loaded","process_flag","process_info","processes","purge_module","put","register","registered","round","self","setelement","size","spawn","spawn_link","spawn_monitor","spawn_opt","split_binary","statistics","term_to_binary","time","throw","tl","trunc","tuple_size","tuple_to_list","unlink","unregister","whereis"],v=/[\w@Ø-ÞÀ-Öß-öø-ÿ]/,m=/[0-7]{1,3}|[bdefnrstv\\"']|\^[a-zA-Z]|x[0-9a-zA-Z]{2}|x{[0-9a-zA-Z]+}/;return{startState:function(){return{tokenStack:[],in_record:!1,in_string:!1,in_atom:!1}},token:function(e,t){return g(e,t)},indent:function(e,t){return N(e,t)},lineComment:"%"}});